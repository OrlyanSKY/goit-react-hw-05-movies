{"version":3,"file":"static/js/544.b2218e71.chunk.js","mappings":"2KAKaA,E,QAAUC,GAAAA,OAAa,CAClCC,QAJe,gCAKfC,OAAQ,CAAEC,QAJI,qC,sECDHC,E,QAAOC,EAAAA,GAAH,wR,mBCGJC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3B,OACE,SAACH,EAAD,WACE,SAACI,EAAA,EAAD,CAAWD,MAAOA,KAGvB,C,0GCTYE,EAAOJ,EAAAA,EAAAA,GAAH,iPAWJK,EAAQL,EAAAA,EAAAA,IAAH,mNAWLM,EAAQN,EAAAA,EAAAA,IAAH,uIAQLO,EAAYP,EAAAA,EAAAA,EAAH,kH,SC5BTG,EAAY,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACpBM,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGP,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACH,EAAD,CACEY,IAAG,yCAAoCJ,GACvCK,IAAI,GACJC,MAAO,WAET,SAACb,EAAD,WACE,SAACC,EAAD,UAAYK,UARPD,EADF,KAgBhB,C,yKClBc,SAASS,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6GAES/B,EAAAA,EAAAA,IAAY,uBAFrB,OAERgC,EAFQ,OAIdH,EAAUG,EAASC,KAAKC,SAJV,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDAUfL,GACD,GAAE,KAGD,SAAC,IAAD,WACE,6BACE,4CACA,SAAC,IAAD,CAAYvB,MAAOoB,EAAnB,UACE,SAAC,IAAD,UAKT,C","sources":["Services/tmdbAPI.js","components/Grid/Grid.styled.js","components/Grid/Grid.jsx","components/GridItems/GridItems.styled.js","components/GridItems/GridItems.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '46354c0f6d8d48bd63fbf74687131c27';\n\nexport const thmdAPI = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY },\n});\n","import styled from '@emotion/styled';\n\nexport const Grid = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Grid } from './Grid.styled';\nimport { GridItems } from 'components/GridItems/GridItems';\n\nexport const StyledGrid = ({ items }) => {\n  return (\n    <Grid>\n      <GridItems items={items} />\n    </Grid>\n  );\n};\n\nStyledGrid.propTypes = {\n  items: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const Card = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  > a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(0.98);\n    cursor: pointer;\n  }\n`;\n\nexport const Thumb = styled.div`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const MovieName = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  text-shadow: 1px 4px 8px rgba(0, 0, 0, 0.75);\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Card, Image, MovieName, Thumb } from './GridItems.styled';\n\nexport const GridItems = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {items.map(({ id, title, poster_path }) => (\n        <Card key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt=\"\"\n              width={'200px'}\n            />\n            <Thumb>\n              <MovieName>{title}</MovieName>\n            </Thumb>\n          </Link>\n        </Card>\n      ))}\n    </>\n  );\n};\n\nGridItems.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { thmdAPI } from 'Services/tmdbAPI';\n\nimport { Container } from 'components/Container/Container.styled';\nimport { StyledGrid } from 'components/Grid/Grid';\nimport { GridItems } from 'components/GridItems/GridItems';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getTrends = async () => {\n      try {\n        const response = await thmdAPI.get('/trending/movie/day');\n\n        setMovies(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getTrends();\n  }, []);\n\n  return (\n    <Container>\n      <main>\n        <h2>Trending today</h2>\n        <StyledGrid items={movies}>\n          <GridItems />\n        </StyledGrid>\n      </main>\n    </Container>\n  );\n}\n"],"names":["thmdAPI","axios","baseURL","params","api_key","Grid","styled","StyledGrid","items","GridItems","Card","Image","Thumb","MovieName","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","Home","useState","movies","setMovies","useEffect","getTrends","response","data","results","console","log"],"sourceRoot":""}