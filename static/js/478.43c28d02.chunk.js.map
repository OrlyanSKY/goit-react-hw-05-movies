{"version":3,"file":"static/js/478.43c28d02.chunk.js","mappings":"2KAKaA,E,QAAUC,GAAAA,OAAa,CAClCC,QAJe,gCAKfC,OAAQ,CAAEC,QAJI,qC,mMCAHC,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2M,SCAVE,EAASF,EAAAA,EAAAA,OAAH,+TAgBNG,GAAOH,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,kD,SCbJI,EAAW,SAAC,GAAkB,IAAD,IAAfC,EAAe,EAAfA,SACzB,OACE,+BACE,SAACF,EAAD,CAAMG,GAAE,oBAAED,EAASE,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,UAACN,EAAD,CAAQO,KAAK,SAAb,WACE,SAAC,MAAD,IADF,gBAOP,ECfYC,EAAUV,EAAAA,EAAAA,IAAH,wOAUPW,EAASX,EAAAA,EAAAA,IAAH,4GAONY,EAAQZ,EAAAA,EAAAA,GAAH,6FAKLa,EAAWb,EAAAA,EAAAA,EAAH,+CAIRc,EAAQd,EAAAA,EAAAA,KAAH,2NCzBLe,EAAY,SAAC,GAEnB,IAAD,IADJC,QAAWC,EACP,EADOA,YAAaC,EACpB,EADoBA,MAAOC,EAC3B,EAD2BA,SAAUC,EACrC,EADqCA,aAAcC,EACnD,EADmDA,OAAQC,EAC3D,EAD2DA,aAE/D,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,WACE,gBACEY,IAAG,0CAAqCN,GACxCO,IAAKN,OAGT,iBAAKO,MAAO,CAAEC,QAAS,QAAvB,WACE,UAACd,EAAD,WACGM,EADH,KACYI,EAAaK,MAAM,KAAK,GADpC,QAGA,eAAGF,MAAO,CAAEG,WAAY,OAAxB,0BAC+B,GAAfR,GAAmBS,UADnC,SAGA,SAACjB,EAAD,wBACA,UAACC,EAAD,eAAYM,MACZ,SAACP,EAAD,qBATF,OAUGS,QAVH,IAUGA,OAVH,EAUGA,EAAQS,KAAI,SAAAC,GAAK,OAChB,SAACjB,EAAD,UAAuBiB,EAAMC,MAAjBD,EAAME,GADF,SAMzB,ECrBc,SAASC,IAAgB,IAAD,QAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMlC,GAAWmC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2B/C,EAAAA,EAAAA,IAAA,iBAAsByC,IAFjD,OAEUO,EAFV,OAIIH,EAAgBG,EAASC,MAJ7B,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACX,KAGF,iCACE,SAAC/B,EAAD,CAAUC,SAAUA,IACK,IAAxBiC,EAAaS,SAAgB,SAAChC,EAAD,CAAWC,QAASsB,KAClD,iBAAKb,MAAO,CAAEuB,aAAc,QAA5B,WACE,oDACA,iBAAKvB,MAAO,CAAEwB,QAAS,QAAvB,WACE,SAAClD,EAAD,CAAYO,GAAG,OAAOC,MAAO,CAAEC,KAAI,oBAAEH,EAASE,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAA7D,mBAIA,SAACT,EAAD,CACEO,GAAG,UACHC,MAAO,CAAEC,KAAI,oBAAEH,EAASE,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAFzC,4BAQJ,SAAC,EAAA0C,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,aAAc,CACZC,OAAQ,QACRJ,QAAS,OACTK,cAAe,SACfC,eAAgB,SAChBC,WAAY,YARpB,UAaE,SAAC,KAAD,QAIP,C","sources":["Services/tmdbAPI.js","pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '46354c0f6d8d48bd63fbf74687131c27';\n\nexport const thmdAPI = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY },\n});\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  padding: 4px 13px;\n  border-radius: 5px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: green;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  padding: 5px 8px;\n  margin: 5px 0;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 350ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover {\n    color: black;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { BiChevronsLeft } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\n\nimport { Button } from './BackLink.styled';\nimport { Link } from './BackLink.styled';\n\nexport const BackLink = ({ location }) => {\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">\n          <BiChevronsLeft />\n          Go back\n        </Button>\n      </Link>\n    </>\n  );\n};\n\nBackLink.propTypes = {\n  location: PropTypes.object,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: block;\n  padding: 5px;\n  border-radius: 5px;\n  box-shadow: 0px -1px 33px 4px rgba(0, 0, 0, 0.35);\n  @media (min-width: 755px) {\n    display: grid;\n    grid-template-columns: 280px 1fr;\n  }\n`;\nexport const Poster = styled.div`\n  max-width: 320px;\n  margin: 0 auto;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n  text-shadow: 1px 4px 8px rgba(0, 0, 0, 0.71);\n`;\n\nexport const Overview = styled.p`\n  font-style: italic;\n`;\n\nexport const Genre = styled.span`\n  background-color: orangered;\n  padding: 3px 5px;\n  border-radius: 5px;\n  color: white;\n  text-shadow: 1px 4px 8px rgba(0, 0, 0, 0.71);\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Overview, Title, Wrapper, Genre, Poster } from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  details: { poster_path, title, overview, vote_average, genres, release_date },\n}) => {\n  return (\n    <Wrapper>\n      <Poster>\n        <img\n          src={`https://image.tmdb.org/t/p/w342/${poster_path}`}\n          alt={title}\n        />\n      </Poster>\n      <div style={{ padding: '10px' }}>\n        <Title>\n          {title} ({release_date.split('-')[0]})\n        </Title>\n        <p style={{ fontWeight: '500' }}>\n          User Score: {(vote_average * 10).toFixed()} %\n        </p>\n        <Title>Overview</Title>\n        <Overview> {overview}</Overview>\n        <Title>Genres</Title>\n        {genres?.map(genre => (\n          <Genre key={genre.id}>{genre.name}</Genre>\n        ))}\n      </div>\n    </Wrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.objectOf(PropTypes.string),\n  release_date: PropTypes.string,\n};\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Puff } from 'react-loader-spinner';\nimport { thmdAPI } from 'Services/tmdbAPI';\n\nimport { StyledLink } from 'pages/MovieDetails/MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const response = await thmdAPI.get(`/movie/${movieId}`);\n\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink location={location} />\n      {movieDetails.length !== 0 && <MovieInfo details={movieDetails} />}\n      <div style={{ marginBottom: '15px' }}>\n        <h3>Additional information</h3>\n        <nav style={{ display: 'flex' }}>\n          <StyledLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n            Cast\n          </StyledLink>\n\n          <StyledLink\n            to=\"reviews\"\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Reviews\n          </StyledLink>\n        </nav>\n      </div>\n      <Suspense\n        fallback={\n          <Puff\n            wrapperStyle={{\n              height: '100vh',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["thmdAPI","axios","baseURL","params","api_key","StyledLink","styled","NavLink","Button","Link","BackLink","location","to","state","from","type","Wrapper","Poster","Title","Overview","Genre","MovieInfo","details","poster_path","title","overview","vote_average","genres","release_date","src","alt","style","padding","split","fontWeight","toFixed","map","genre","name","id","MovieDetails","movieId","useParams","useState","movieDetails","setMovieDetails","useLocation","useEffect","response","data","console","log","getMovieDetails","length","marginBottom","display","Suspense","fallback","wrapperStyle","height","flexDirection","justifyContent","alignItems"],"sourceRoot":""}